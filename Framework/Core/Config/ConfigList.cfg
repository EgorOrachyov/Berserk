#
# Created by Egor Orachyov on 12.07.2018.
#
# Description:  Berserk configuration list
#               All the handled cfg flags and values
#               Separated by system specialization
#
# Format:       name        - cfg param name
#               type        - type of param
#               default     - standard initial value
#               description - description of the param
#
# Modules:      Module name should be written in [ ... ] brackets without
#               spaces. After [module] operator all the read params will
#               be associated with that system.
#
# Lines:        One cfg file line cannot be more than 1024 symbols.
#               Each operation should be ended with ; operator.
#
# Comment:      Comments should be marked via # sharp symbol. Last part of the
#               line after # will be interpreted as comment.
#
# Types:        INT16   - 16 bits integer value
#               UINT16  - 16 bits unsigned integer value
#               INT32   - 32 bits integer value
#               UINT32  - 32 bits unsigned integer value
#               FLOAT32 - 32 bits float value
#               FLOAT64 - 64 bits float value
#               BOOL    - 32 bits bool value
#               TEXT    - 128 bytes ASCII-7 style string
#
# Note:         If cfg param value is not set via cfg file of application,
#               then standard (default) value will be applied to
#               this param
#

[Engine]

name = ApplicationName;
type = TEXT;
default = "Test application";
description = "Defines application name and label of the created rendering window";

name = RenderSystem;
type = TEXT;
default = "GLRenderAPI";
description = "Defines rendering system, which will be used by application";

[Render]

name = WindowWidth;
type = UINT32;
default = 800;
description = "Defines window size: width";

name = WindowHeight;
type = UINT32;
default = 600;
description = "Defines window size: height";

name = GammaCorrection;
type = FLOAT32;
default = 1;
description = "Defines gamma correction factor to reduce influence of monitor on result image";

name = MultiSampleAntiAliasing;
type = BOOL;
default = 1;
description = "Says renderer use MSAA method to create more soft polygon edges";

name = MultiSampleAntiAliasingDesiredValue;
type = UINT32;
default = 8;
description = "Specify desired number of MSAA buffers";

name = DeferredShading;
type = BOOL;
default = 0;
description = "Says renderer use deferred shading technique";

name = HDRToneMapping;
type = BOOL;
default = 1;
description = "Says renderer use extended luminance for rendered colors"

name = GaussianFiltering;
type = BOOL;
default = 0;
description = "Says renderer use Gaussian filter for creating image's blur";

name = BloomEffect;
type = BOOL;
default = 1;
description = "Note: involves HDR tone mapping; Creates bloom light effect with HDR";

name = ShadowMapping;
type = BOOL;
default = 1;
description = "Says renderer use shadow mapping for creating scene shadows";

name = PCFShadowMappingSoftening;
type = BOOL;
default = 0;
description = "Says renderer use to create soft shadows";

name = RandomSamplingShadowMappingSoftening;
type = BOOL;
default = 1;
description = "Says renderer use to create soft shadows";

[Physics]

[Audio]