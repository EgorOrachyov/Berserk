cmake_minimum_required(VERSION 3.9)
project(BerserkGLRenderAPI)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -Wall -v -Wextra -Wshadow -Wnon-virtual-dtor -pedantic")

set(SOURCE_LIB
        Source/GLDataBufferPacker.cpp
        Buffers/GLDataBufferPacker.h
        Source/GLRenderSystem.cpp
        Render/GLRenderSystem.h
        Source/GLGPUProgram.cpp
        GPUProgram/GLGPUProgram.h
        Source/GLTexture.cpp
        Texture/GLTexture.h
        Source/GLTextureManager.cpp
        Managers/GLTextureManager.h
        Debug/GLClassTesting.h
        Essential/GLInclude.h
        Source/GLUniformBufferObject.cpp
        Buffers/GLUniformBufferObject.h
        GPUProgram/GLShaderType.h
        Essential/GLDataType.h
        GPUProgram/GLNormalization.h
        Essential/GLPrimitiveMode.h
        Source/GLGPUBuffer.cpp
        Buffers/GLGPUBuffer.h
        Source/GLFrameBufferObject.cpp
        Buffers/GLFrameBufferObject.h
        Texture/GLTextureWrapping.h
        Texture/GLTextureFiltering.h
        Texture/GLTextureMipmaps.h
        Source/GLSampler.cpp
        Texture/GLSampler.h
        Texture/GLTextureFormat.h
        Texture/GLTextureType.h
        Debug/GLSizeTesting.h
        Uniform/LightStructures.h
        Uniform/MaterialStructures.h
        Uniform/TransformationStructures.h
        Uniform/PostProcessStructures.h
        Source/GLMaterial.cpp
        Render/GLMaterial.h
        Source/GLMaterialManager.cpp
        Managers/GLMaterialManager.h
        Source/GLRenderNode.cpp
        Render/GLRenderNode.h
        Source/GLSamplerManager.cpp
        Managers/GLSamplerManager.h
        Source/GLRenderMesh.cpp
        Render/GLRenderMesh.h
        Source/GLRenderMeshManager.cpp
        Managers/GLRenderMeshManager.h
        Source/GLScreenPlane.cpp
        Render/GLScreenPlane.h
        Source/GLToneMap.cpp
        Pipeline/GLToneMap.h
        Source/GLGaussianBloom.cpp
        Pipeline/GLGaussianBloom.h
        Source/GLLensOptics.cpp
        Pipeline/GLLensOptics.h
        Source/GLMoutionBlur.cpp
        Pipeline/GLMoutionBlur.h
        Source/GLDepthOfField.cpp
        Pipeline/GLDepthOfField.h
        Source/GLDeferredShading.cpp
        Pipeline/GLDeferredShading.h
        Uniform/UniformInfo.h
        Source/GLRenderDriver.cpp
        Render/GLRenderDriver.h
        Source/GLScreenRender.cpp
        Pipeline/GLScreenRender.h
        Source/GLPhongModel.cpp
        Pipeline/GLPhongModel.h
        Source/GLShadowMap.cpp
        Pipeline/GLShadowMap.h
        Source/GLDepthMap.cpp
        Buffers/GLDepthMap.h
        Source/GLCubeDepthMap.cpp
        Buffers/GLCubeDepthMap.h
        Source/GLPhongShadow.cpp
        Pipeline/GLPhongShadow.h
        Uniform/ShadowStructures.h
        Timer/GLTimer.h
        Uniform/DeferredStructures.h
        Source/GLGBuffer.cpp
        Buffers/GLGBuffer.h
        Source/GLTextureImporter.cpp
        Texture/GLTextureImporter.h
        Source/GLPhongDeferred.cpp
        Pipeline/GLPhongDeferred.h
        Source/GLAmbientOcclusion.cpp
        Pipeline/GLAmbientOcclusion.h
        Source/GLSSAONoise.cpp
        Buffers/GLSSAONoise.h
        Source/GLSSAOBuffer.cpp
        Buffers/GLSSAOBuffer.h
        Source/GLLightShafts.cpp
        Pipeline/GLLightShafts.h
        Source/GLLightMap.cpp
        Buffers/GLLightMap.h)

add_library(BerserkGLRenderAPI STATIC ${SOURCE_LIB})