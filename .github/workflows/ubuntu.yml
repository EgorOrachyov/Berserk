name: Ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build Berserk Engine
    runs-on: ubuntu-latest
    env:
      build_dir: "build"
      config: "Debug"
      artifact: "berserk-ubuntu-build.tar.xz"

    steps:
    - uses: actions/checkout@v2
    
    - name: Install build requirements
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential

    - name: Install glfw dependencies
      shell: bash
      run: |
        sudo apt-get install -y libxrandr-dev libxinerama-dev xorg-dev

    - name: Install glew dependencies
      shell: bash
      run: |
        sudo apt-get install -y libgl1-mesa-dri libgl1-mesa-glx libgl1-mesa-dev
        sudo apt-get install -y libxmu-dev libxi-dev libgl-dev libglx-dev
        sudo apt-get install -y libx11-dev

    - name: Install vulkan sdk
      shell: bash
      run: |
        wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.176-focal.list https://packages.lunarg.com/vulkan/1.2.176/lunarg-vulkan-1.2.176-focal.list
        sudo apt update
        sudo apt install vulkan-sdk

    - name: Configure CMake
      shell: bash
      run: cmake . -B ${{env.build_dir}} -DCMAKE_BUILD_TYPE=${{env.config}}
    
    - name: Build engine source
      working-directory: ${{env.build_dir}}
      shell: bash
      run: cmake --build . --verbose -j `nproc`

    - name: Run core tests
      working-directory: ${{env.build_dir}}
      shell: bash
      run: bash Scripts/run_tests.sh

    - name: Prepare upload binary
      shell: bash
      run: tar cfz ${{env.artifact}} ${{env.build_dir}}

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.artifact}}
        path: ${{env.artifact}}
      
